---
- name: Set timezone
  hosts: servers
  become: yes
  tasks:
    - name: Set timezone
      community.general.timezone:
        name: Pacific/Auckland

- name: Upgrade systems
  become: yes
  hosts: servers
  roles:
    - upgrade_system

- name: Set hostnames
  hosts: servers
  become: yes
  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}.flexi.nesi"
- name: Setup /etc/hosts
  hosts: servers
  become: yes
  gather_facts: yes
  tasks:
    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        line: '{{ hostvars[item]["ansible_default_ipv4"]["address"] }} {{ hostvars[item]["ansible_hostname"] }} {{ hostvars[item]["ansible_nodename"] }}'
        state: present
      with_items: "{{ groups['servers'] }}"
    - name: setup hosts ood-idp
      lineinfile:
        dest: /etc/hosts
        line: '{{ hostvars["services-node"]["ansible_default_ipv4"]["address"] }} ood-idp.flexi.nesi'
        state: present
    - name: setup hosts ood
      lineinfile:
        dest: /etc/hosts
        line: '{{ hostvars["web-node"]["ansible_default_ipv4"]["address"] }} ood.flexi.nesi'
        state: present

- name: Setup LDAP server
  become: yes
  hosts: services-node
  vars_files:
    - secrets.yml
  roles:
    - ldap_server

- name: Setup LDAP clients
  become: yes
  hosts: servers
  vars_files:
    - secrets.yml
  roles:
    - ldap_client

- name: Setup NFS server
  become: yes
  hosts: services-node
  vars_files:
    - secrets.yml
  roles:
    - nfs_homes_server

- name: Setup NFS clients
  become: yes
  hosts: servers
  vars_files:
    - secrets.yml
  roles:
    - nfs_homes_client

- name: Add users
  become: yes
  hosts: services-node
  vars_files:
    - secrets.yml
  roles:
    - ldap_add_users

- name: Setup keycloak
  become: yes
  hosts: services-node
  vars_files:
    - secrets.yml
  roles:
    - keycloak

# create ssl cert
- name: Create SSL certificate for ondemand
  become: yes
  hosts: web-node
  tasks:
    - name: Create directories for OpenSSL certificate
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
      loop:
        - /etc/ssl/private
        - /etc/ssl/crt
        - /etc/ssl/csr
    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      community.crypto.openssl_privatekey:
        path: /etc/ssl/private/apache-ood.key
    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: /etc/ssl/csr/apache-ood.csr
        privatekey_path: /etc/ssl/private/apache-ood.key
        common_name: flexi.nesi
    - name: Generate a Self Signed OpenSSL certificate
      community.crypto.x509_certificate:
        path: /etc/ssl/crt/apache-ood.crt
        privatekey_path: /etc/ssl/private/apache-ood.key
        csr_path: /etc/ssl/csr/apache-ood.csr
        provider: selfsigned

- name: Install Apptainer
  become: yes
  hosts: web-node
  roles:
    - apptainer

# run ondemand role
- name: Install ondemand
  become: yes
  hosts: web-node
  vars_files:
    - secrets.yml
    - ondemand-config.yml
  pre_tasks:
    - name: Get keycloak client secret
      community.general.keycloak_clientsecret_info:
        client_id: ondemand.flexi
        realm: ondemand
        auth_client_id: admin-cli
        auth_keycloak_url: https://ood-idp.flexi.nesi/auth
        auth_realm: master
        auth_username: admin
        auth_password: "{{ keycloak_admin_password }}"
        validate_certs: false
      register: keycloak_secret
      no_log: true
    - name: Set keycloak client secret fact for ondemand
      set_fact:
        oidc_client_secret: "{{ keycloak_secret.clientsecret_info.value }}"
      no_log: true
  roles:
    - osc.open_ondemand

- name: Post ondemand setup
  hosts: web-node
  become: yes
  tasks:
    - name: Install dependencies for interactive apps
      apt:
        name:
          - ncat
          - websockify
        state: present
