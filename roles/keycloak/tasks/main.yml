---
- name: Install dependencies for keycloak
  apt:
    name:
      - openjdk-17-jdk
    state: present

- name: Download keycloak archive
  ansible.builtin.get_url:
    url: https://github.com/keycloak/keycloak/releases/download/22.0.1/keycloak-22.0.1.tar.gz
    dest: /opt/keycloak-22.0.1.tar.gz
    checksum: "sha1:eea6076b99a78f88104e3a08618f4422d0ff16e2"

- name: Extract keycloak archive
  ansible.builtin.unarchive:
    src: /opt/keycloak-22.0.1.tar.gz
    dest: /opt
    creates: /opt/keycloak-22.0.1
    remote_src: yes

- name: Create keycloak group
  ansible.builtin.group:
    name: keycloak
    state: present
    system: true

- name: Create keycloak user
  ansible.builtin.user:
    name: keycloak
    group: keycloak
    create_home: true
    home: /var/lib/keycloak
    system: true
    shell: /sbin/nologin
    state: present

- name: Set ownership of keycloak dir
  file:
    path: /opt/keycloak-22.0.1
    owner: keycloak
    group: keycloak
    recurse: true

- name: Install keycloak defaults file
  template:
    src: keycloak_defaults.j2
    dest: /etc/default/keycloak
    owner: root
    group: root
    mode: '600'

- name: Install keycloak system service file
  template:
    src: keycloak.service.j2
    dest: /etc/systemd/system/keycloak.service
    owner: root
    group: root
  register: keycloak_service_file
  notify: restart apache

- name: Restart keycloak service
  systemd:
    name: keycloak
    daemon_reload: true
    state: restarted
    enabled: true
  when: keycloak_service_file is changed

- name: Keycloak service is running
  systemd:
    name: keycloak
    enabled: true
    state: started

# setting up apache in front of keycloak
- name: Install apache2
  apt:
    name:
      - apache2
    state: present

# - name: Create directories for OpenSSL certificate
#   file:
#     path: "{{ item }}"
#     state: directory
#     owner: root
#     group: root
#   loop:
#     - "{{ apache_keycloak_certificate_path | dirname }}"
#     - "{{ apache_keycloak_private_key_path | dirname }}"
#     - "{{ apache_keycload_csr_path | dirname }}"

# - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
#   community.crypto.openssl_privatekey:
#     path: "{{ apache_keycloak_private_key_path }}"

# - name: Generate an OpenSSL Certificate Signing Request
#   community.crypto.openssl_csr:
#     path: "{{ apache_keycload_csr_path }}"
#     privatekey_path: "{{ apache_keycloak_private_key_path }}"
#     common_name: "{{ oidc_hostname }}"

# - name: Generate a Self Signed OpenSSL certificate
#   community.crypto.x509_certificate:
#     path: "{{ apache_keycloak_certificate_path }}"
#     privatekey_path: "{{ apache_keycloak_private_key_path }}"
#     csr_path: "{{ apache_keycload_csr_path }}"
#     ownca_path: "{{ rdc_certificate_path }}"
#     ownca_privatekey_path: "{{ rdc_private_key_path }}"
#     ownca_privatekey_passphrase : "{{ rdc_ca_passphrase }}"
#     provider: ownca

- name: Enable the Apache2 modules
  community.general.apache2_module:
    state: present
    name: "{{ item }}"
  notify: restart apache
  loop:
    - proxy_http
    - ssl
    - headers
    - rewrite

- name: Install apache keycloak config
  template:
    src: keycloak.conf.j2
    dest: /etc/apache2/sites-available/keycloak.conf
    owner: root
    group: root
  notify: restart apache

- name: Enable apache keycloak site
  command: a2ensite keycloak.conf
  args:
    creates: /etc/apache2/sites-enabled/keycloak.conf
  notify: restart apache

# configuring keycloak
- name: Create ondemand Keycloak realm
  community.general.keycloak_realm:
    auth_client_id: admin-cli
    auth_keycloak_url: http://127.0.0.1:8080
    auth_realm: master
    auth_username: admin
    auth_password: "{{ keycloak_admin_password }}"
    id: ondemand
    realm: ondemand
    login_with_email_allowed: false
    remember_me: true
    enabled: true
    state: present
  register: lsresult
  until: "lsresult is not failed"
  retries: 10
  delay: 10

- name: Create LDAP user federation
  community.general.keycloak_user_federation:
    auth_client_id: admin-cli
    auth_keycloak_url: http://127.0.0.1:8080
    auth_realm: master
    auth_username: admin
    auth_password: "{{ keycloak_admin_password }}"
    realm: ondemand
    name: my-ldap
    state: present
    provider_id: ldap
    provider_type: org.keycloak.storage.UserStorageProvider
    config:
      importEnabled: false
      editMode: READ_ONLY
      vendor: other
      userObjectClasses: posixAccount
      connectionUrl: ldap://servicesnode.flexi.nesi
      usersDn: ou=people,dc=flexi,dc=nesi
      authType: none
      useTruststoreSpi: never
      usernameLDAPAttribute: uid
      rdnLDAPAttribute: uid
      uuidLDAPAttribute: entryUUID
  register: lsresult
  until: "lsresult is not failed"
  retries: 10
  delay: 10

- name: Add kubernetes as a client
  community.general.keycloak_client:
    auth_client_id: admin-cli
    auth_keycloak_url: http://127.0.0.1:8080
    auth_realm: master
    auth_username: admin
    auth_password: "{{ keycloak_admin_password }}"
    state: present
    realm: ondemand
    client_id: kubernetes
    protocol: openid-connect
    public_client: false
    redirect_uris:
      - http://*
      - https://*
  register: lsresult
  until: "lsresult is not failed"
  retries: 10
  delay: 10

- name: Add ondemand as a client
  community.general.keycloak_client:
    auth_client_id: admin-cli
    auth_keycloak_url: http://127.0.0.1:8080
    auth_realm: master
    auth_username: admin
    auth_password: "{{ keycloak_admin_password }}"
    state: present
    realm: ondemand
    client_id: ondemand.flexi
    protocol: openid-connect
    public_client: false
    redirect_uris:
      - https://{{ servername }}/oidc
      - https://{{ servername }}
    protocol_mappers:
      - config:
          id.token.claim: False
          access.token.claim: True
          userinfo.token.claim: False
          included.client.audience: kubernetes
        protocol: openid-connect
        name: kubernetes
        protocolMapper: oidc-audience-mapper
  register: lsresult
  until: "lsresult is not failed"
  retries: 10
  delay: 10

