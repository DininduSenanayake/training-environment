---
- name: Create Kubernetes ssl directory
  file:
    path: "{{ kube_cert_dir }}"
    state: directory

- name: Install OIDC certificate
  copy:
    content: "{{ kube_oidc_ca_cert | b64decode }}"
    dest: "{{ kube_oidc_ca_file }}"
    owner: root
    group: root
    mode: "0644"
  when:
    - kube_oidc_auth
    - kube_oidc_ca_cert is defined

- name: Check if kubeadm has already run
  stat:
    path: "/var/lib/kubelet/config.yaml"
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: kubeadm_already_run

- name: Create hardcoded kubeadm token for joining nodes with 24h expiration (if defined)
  shell: >-
    kubeadm token generate
  changed_when: false
  when:
    - inventory_hostname ==  first_kube_control_plane
    - kubeadm_token is defined
  register: temp_token

- name: Set kubeadm_token
  set_fact:
    kubeadm_token: "{{ temp_token.stdout_lines[0] }}"
  when:
    - temp_token.stdout is defined
    - inventory_hostname ==  first_kube_control_plane

- name: Create kubeadm config
  template:
    src: "kubeadm-config.yaml.j2"
    dest: "{{ kube_config_dir }}/kubeadm-config.yaml"
    mode: 0640
  when:
    - inventory_hostname ==  first_kube_control_plane

- name: Initialize first master
  command: >-
    kubeadm init
    --config={{ kube_config_dir }}/kubeadm-config.yaml
    --ignore-preflight-errors=all
    --upload-certs
  when:
    - inventory_hostname == first_kube_control_plane
    - not kubeadm_already_run.stat.exists

- name: create .kube directory
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755
  when:
    - inventory_hostname == first_kube_control_plane
    - not kubeadm_already_run.stat.exists

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes
  when:
    - inventory_hostname == first_kube_control_plane
    - not kubeadm_already_run.stat.exists

- name: copy admin.conf to loacal
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: ./config/k8s-admin.conf
    flat: yes
  when:
    - inventory_hostname == first_kube_control_plane
    - not kubeadm_already_run.stat.exists

- name: install Pod network
  command: >-
    kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  when:
    - inventory_hostname == first_kube_control_plane
    - not kubeadm_already_run.stat.exists

# - name: Create a New Certificate Key
#   become: true
#   command: >-
#     kubeadm init phase upload-certs --upload-certs
#   register: join_certificate_key
#   changed_when: join_certificate_key.rc != 0 # Uses the return code to define when the task has changed.
#   when:
#     - inventory_hostname == first_kube_control_plane

# - name: Generate Master Join Command
#   become: true
#   command: >-
#     kubeadm token create --print-join-command --certificate-key "{{ join_certificate_key.stdout_lines[2] }}"
#   register: join_master_command_raw
#   changed_when: join_master_command.rc != 0 # Uses the return code to define when the task has changed.
#   when:
#     - inventory_hostname == first_kube_control_plane

# - name: Set Master Join Command
#   set_fact:
#     master_join_command: "{{ join_master_command_raw.stdout_lines[0] }}"
#   when:
#     - inventory_hostname == first_kube_control_plane